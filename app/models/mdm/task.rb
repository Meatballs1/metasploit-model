# A task run by metasploit Pro.
#
# @todo https://www.pivotaltracker.com/story/show/52582701
class Mdm::Task < ActiveRecord::Base
  #
  #
  # Associations
  #
  #

  # @!attribute [rw] reports
  #   Reports generated by this task.
  #
  #   @return [Array<Mdm::Report>]
  #   @todo https://www.pivotaltracker.com/story/show/52417783
  has_many :reports, :class_name => 'Mdm::Report'

  # @!attribute [rw] task_creds
  #   Joins this to {#creds}.
  #
  #   @return [Array<Mdm::TaskCred>]
  has_many :task_creds, :class_name => 'Mdm::TaskCred', :dependent => :destroy

  # @!attribute [rw] task_hosts
  #   Joins this to {#hosts}.
  #
  #   @return [Array<Mdm::TaskHost>]
  has_many :task_hosts, :class_name => 'Mdm::TaskHost', :dependent => :destroy

  # @!attribute [rw] task_services
  #   Joins this to {#services}.
  #
  #   @return [Array<Mdm::TaskService>]
  has_many :task_services, :class_name => 'Mdm::TaskService', :dependent => :destroy

  # @!attribute [rw] task_sessions
  #   Joins this to {#sessions}.
  #
  #   @return [Array<Mdm::TaskSession>]
  has_many :task_sessions, :dependent => :destroy, :class_name => 'Mdm::TaskSession'

  # @!attribute [rw] workspace
  #   The Workspace the Task belongs to.
  #
  #   @return [Mdm::Workspace]
  belongs_to :workspace,  :class_name => "Mdm::Workspace"

  #
  # :through => :task_creds
  #

  # @!attribute [rw] creds
  #   Creds this task touched.
  #
  #   @return [Array<Mdm::Cred>]
  has_many :creds, :class_name => 'Mdm::Cred', :through => :task_creds

  #
  # :through => :task_hosts
  #

  # @!attribute [rw] hosts
  #   Hosts this task touched.
  #
  #   @return [Array<Mdm::Host>]
  has_many :hosts, :class_name => 'Mdm::Host', :through => :task_hosts

  #
  # :through => :task_services
  #

  # @!attribute [rw] services
  #   Services this task touched.
  #
  #   @return [Array<Mdm::Service>]
  has_many :services, :class_name => 'Mdm::Service', :through => :task_services

  #
  # :through => :task_sessions
  #

  # @!attribute [rw] sessions
  #   Session this task touched.
  #
  #   @return [Array<Mdm::Session>]
  has_many :sessions, :through => :task_sessions, :class_name => 'Mdm::Session'

  #
  # Attributes
  #

  # @!attribute [rw] completed_at
  #   When this task completed.
  #
  #   @return [DateTime] when this task completed
  #   @return [nil] this task is still {running}.

  # @!attribute [rw] created_at
  #   When this task was created.
  #
  #   @return [DateTime]

  # @!attribute [rw] created_by
  #   {Mdm::User#username Name of user} that created this task.
  #
  #   @return [String]
  #   @todo https://www.pivotaltracker.com/story/show/52582707

  # @!attribute [rw] description
  #   Description of what the this task does.
  #
  #   @return [String]

  # @!attribute [rw] error
  #   Error raised while task was running that caused this task to fail.
  #
  #   @return [String]

  # @!attribute [rw] info
  #   Information about the task's current status.  What the task is currently doing.
  #
  #   @return [String]

  # @!attribute [rw] module
  #   {Mdm::Module::Class#full_name Module full name} that was run for this task.
  #
  #   @return [String]
  #   @todo https://www.pivotaltracker.com/story/show/52582717

  # @!attribute [rw] module_uuid
  #   UUID of {#module} that was run by this task.
  #
  #   @return [String]
  #   @todo https://www.pivotaltracker.com/story/show/52582729

  # @!attribute [rw] path
  #   Path to the log for this task.
  #
  #   @return [String]

  # @!attribute [rw] progress
  #   Percentage complete.
  #
  #   @return [Integer]

  # @!attribute [rw] updated_at
  #   When this task was last updated.
  #
  #   @return [DateTime]

  #
  # Callbacks
  #

  before_destroy :delete_file

  #
  # Scopes
  #

  #
  # @!group Scopes
  #

  # @!method self.running
  #   Returns all {Mdm::Task tasks} that have not yet {#completed_at completed}, ordered by when the task was
  #   {#created_at created}.
  #
  #   @return [ActiveRecord::Relation]
  scope :running, order( "created_at DESC" ).where("completed_at IS NULL")

  #
  # @!endgroup
  #

  #
  # Serializations
  #

  # @!attribute [rw] options
  #   Options passed to {#module}.
  #
  #   @return [Hash]
  serialize :options, MetasploitDataModels::Base64Serializer.new

  # @!attribute [rw] result
  #   Result of task running.
  #
  #   @return [Hash]
  serialize :result, MetasploitDataModels::Base64Serializer.new

  # @!attribute [rw] settings
  #   Settings used to configure this task outside of the {#options module options}.
  #
  #   @return [Hash]
  serialize :settings, MetasploitDataModels::Base64Serializer.new

  private

  # Deletes {#path log} on-disk, so that disk is cleaned up when this task is deleted from the database.
  #
  # @return [void]
  def delete_file
    c = Pro::Client.get rescue nil
    if c
      c.task_delete_log(self[:id]) if c
    else
      ::File.unlink(self.path) rescue nil
    end
  end

  # Restore public for load hooks
  public

  ActiveSupport.run_load_hooks(:mdm_task, self)
end

