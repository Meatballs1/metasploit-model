# When a {#host} or {#service} on a {#host} is exploited.
#
# @deprecated use {Mdm::ExploitAttempt} instead.
# @todo https://www.pivotaltracker.com/story/show/48993731
class Mdm::ExploitedHost < ActiveRecord::Base
  #
  # Associations
  #

  # @!attribute [rw] host
  #   The host that was exploited.
  #
  #   @return [Mdm::Host]
  belongs_to :host, :class_name => 'Mdm::Host'

  # @!attribute [rw] service
  #   The service on {#host} that was exploited.
  #
  #   @return [Mdm::Service]
  belongs_to :service, :class_name => 'Mdm::Service'

  #
  # Attributes
  #

  # @!attribute [rw] name
  #   Name of exploit.
  #
  #   @return [String]

  # @!attribute [rw] payload
  #   {Mdm::Module::Class#full_name Full name of the payload module} used to exploit the {#host} or {#service} on
  #   {#host}.
  #
  #   @return [String]

  # @!attribute [rw] session_uuid
  #   UUID of local session.
  #
  #   @return [String]
  #   @deprecated Sessions no longer have UUIDs.  They have {Mdm::Session#local_id} that reflects the in-memory
  #     Msf::Session ID and an in-database {Mdm::Session#id}.

  ActiveSupport.run_load_hooks(:mdm_exploited_host, self)
end
